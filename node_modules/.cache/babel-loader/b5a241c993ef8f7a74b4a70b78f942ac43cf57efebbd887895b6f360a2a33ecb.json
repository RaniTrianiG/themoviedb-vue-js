{"ast":null,"code":"import MovieCard from './MovieCard.vue';\n// import TVCard from './TVCard.vue';\nexport default {\n  components: {\n    MovieCard\n    // TVCard,\n  },\n  data: function () {\n    return {\n      shows: [],\n      sortedBy: \"popularity\",\n      page: 1,\n      showPagination: false,\n      movies: [],\n      genres: []\n    };\n  },\n  async mounted() {\n    this.init();\n    this.fetchGenres();\n    try {\n      const response = await this.$http.get(\"/movie/popular\");\n      this.movies = response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  computed: {\n    posterPath() {\n      return \"https://image.tmdb.org/t/p/w1280\";\n    }\n  },\n  methods: {\n    async fetchGenres() {\n      try {\n        const response = await this.$http.get(\"/genre/movie/list\");\n        this.genres = response.data.genres;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async init() {\n      try {\n        const key = '43b9e3cc1dc5722850170884102956cf';\n        const response = await this.$http.get(\"/tv/popular?api_key=\" + key + \"&language=en-US&page=\" + this.page);\n        this.shows = response.data.results;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  watch: {\n    page: function (page) {\n      this.init();\n    }\n  }\n};","map":{"version":3,"names":["MovieCard","components","data","shows","sortedBy","page","showPagination","movies","genres","mounted","init","fetchGenres","response","$http","get","results","error","console","log","computed","posterPath","methods","key","watch"],"sources":["src/components/PopularMovies.vue"],"sourcesContent":["<template>\n    <div class=\"mx-3\">\n        <h2 class=\"mt-2 grey--text\">Popular Movies</h2>\n        <v-container fluid>\n            <v-row>\n                <v-col cols=\"12\" sm=\"3\" v-for=\"movie in movies\" :key=\"movie.id\">\n                    <MovieCard :movie=\"movie\" :genres=\"genres\" />\n                </v-col>\n                <v-col cols=\"12\" sm=\"3\" @popularity=\"sortBy('popularity')\">\n                    <!-- <media-grid :movies=\"shows\" :imageURL=\"imageURL\"></media-grid> -->\n                    <span>Popular Shows</span>\n                    <v-img :src=\"posterPath\" alt=\"\" class=\"\"></v-img>\n                </v-col>\n                <!-- <media-grid :movies=\"shows\" :imageURL=\"imageURL\"></media-grid> -->\n                <div class=\"text-center\" v-if=\"showPagination\">\n                    <v-pagination color=\"primary\" v-model=\"page\" :length=\"3\" :value=\"page\"></v-pagination>\n                </div>\n            </v-row>\n        </v-container>\n    </div>\n</template>\n\n<script>\nimport MovieCard from './MovieCard.vue';\n// import TVCard from './TVCard.vue';\nexport default {\n    components: {\n        MovieCard,\n        // TVCard,\n    },\n    data: function () {\n        return {\n            shows: [],\n            sortedBy: \"popularity\",\n            page: 1,\n            showPagination: false,\n            movies: [],\n            genres: []\n        };\n    },\n    async mounted() {\n        this.init();\n        this.fetchGenres();\n        try {\n            const response = await this.$http.get(\"/movie/popular\");\n            this.movies = response.data.results;\n        } catch (error) {\n            console.log(error)\n        }\n    },\n    computed: {\n        posterPath() {\n            return \"https://image.tmdb.org/t/p/w1280\"\n        }\n    },\n    methods: {\n        async fetchGenres() {\n            try {\n                const response = await this.$http.get(\"/genre/movie/list\");\n                this.genres = response.data.genres;\n            } catch (error) {\n                console.log(error)\n            }\n        },\n        async init() {\n            try {\n                const key = '43b9e3cc1dc5722850170884102956cf';\n                const response = await this.$http.get(\"/tv/popular?api_key=\" + key + \"&language=en-US&page=\" + this.page);\n                this.shows = response.data.results;\n            } catch (error) {\n                console.log(error)\n            }\n        }, \n    },\n    watch: {\n        page: function(page){\n            this.init();\n        }\n    }\n}\n</script>\n\n<style></style>"],"mappings":"AAuBA,OAAAA,SAAA;AACA;AACA;EACAC,UAAA;IACAD;IACA;EACA;EACAE,IAAA,WAAAA,CAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,IAAA;MACAC,cAAA;MACAC,MAAA;MACAC,MAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAC,IAAA;IACA,KAAAC,WAAA;IACA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA;MACA,KAAAP,MAAA,GAAAK,QAAA,CAAAV,IAAA,CAAAa,OAAA;IACA,SAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;IACA;EACA;EACAG,QAAA;IACAC,WAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAV,YAAA;MACA;QACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA;QACA,KAAAN,MAAA,GAAAI,QAAA,CAAAV,IAAA,CAAAM,MAAA;MACA,SAAAQ,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACA,MAAAN,KAAA;MACA;QACA,MAAAY,GAAA;QACA,MAAAV,QAAA,cAAAC,KAAA,CAAAC,GAAA,0BAAAQ,GAAA,kCAAAjB,IAAA;QACA,KAAAF,KAAA,GAAAS,QAAA,CAAAV,IAAA,CAAAa,OAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;EACAO,KAAA;IACAlB,IAAA,WAAAA,KAAA;MACA,KAAAK,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}