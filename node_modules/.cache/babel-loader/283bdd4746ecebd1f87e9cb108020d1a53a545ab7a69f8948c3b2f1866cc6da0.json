{"ast":null,"code":"export default {\n  data() {\n    return {\n      socialDetails: [],\n      actor: {},\n      knownFor: [],\n      castMovies: {}\n    };\n  },\n  mounted() {\n    this.fetchActor(this.$route.params.id);\n    this.fetchCredits(this.$route.params.id);\n    this.fetchSocial(this.$route.params.id);\n  },\n  methods: {\n    async fetchActor(actorId) {\n      const response = await this.$http.get(\"https://api.themoviedb.org/3/person/\" + actorId);\n      this.actor = response.data;\n    },\n    async fetchCredits(actorId) {\n      const response = await this.$http.get(\"https://api.themoviedb.org/3/person/\" + actorId + \"/combined_credits\");\n      this.castMovies = response.data.cast;\n      this.knownFor = response.data.cast.filter(x => x.media_type == \"movie\").slice(1, 6);\n      /*this.knownFor = response.data.cast.slice(\n        Math.max(response.data.cast.length - 5, 1)\n      );*/\n    },\n    movieImage(movie) {\n      const posterPath = movie.poster_path;\n      if (!posterPath) {\n        return \"https://via.placeholder.com/185x278\";\n      }\n      return \"https://image.tmdb.org/t/p/w185/\" + posterPath;\n    },\n    async fetchSocial(actorId) {\n      const response = await this.$http.get(\"https://api.themoviedb.org/3/person/\" + actorId + \"/external_ids\");\n      this.socialDetails = response.data;\n    },\n    castDetails(cast) {\n      return parseInt(cast.release_date) + \" .\";\n    }\n  }\n};","map":{"version":3,"names":["data","socialDetails","actor","knownFor","castMovies","mounted","fetchActor","$route","params","id","fetchCredits","fetchSocial","methods","actorId","response","$http","get","cast","filter","x","media_type","slice","movieImage","movie","posterPath","poster_path","castDetails","parseInt","release_date"],"sources":["src/components/ActorDetail.vue"],"sourcesContent":["<template>\n    <div>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"4\">\n                    <v-hover\n            v-slot=\"{ hover }\"\n            open-delay=\"200\"\n          >\n    <v-card :elevation=\"hover ? 16 : 2\"\n              :class=\"{ 'on-hover': hover }\">\n    \n              <v-img  :src=\"'https://image.tmdb.org/t/p/w300/' + actor.profile_path\"\n              alt=\"\" />\n             <v-card-text>\n          <v-row\n            \n            class=\"mx-0 d-flex justify-center\"\n          >\n         <v-btn\n          class=\"mx-2\"\n          fab\n          dark\n          small\n          color=\"error\"\n          :href=\"'https://facebook.com/' + socialDetails.facebook_id\"\n        >\n          <v-icon dark>\n           fab fa-facebook-f\n          </v-icon>\n        </v-btn>\n        <v-btn\n          class=\"mx-2\"\n          fab\n          dark\n          small\n          color=\"error\"\n          :href=\"'https://instagram.com/' + socialDetails.instagram_id\"\n        >\n          <v-icon dark>\n          fab fa-instagram\n          </v-icon>\n        </v-btn>\n        <v-btn\n          class=\"mx-2\"\n          fab\n          dark\n          small\n          color=\"error\"\n          :href=\"'https://twitter.com/' + socialDetails.twitter_id\"\n        >\n          <v-icon dark>\n          fab fa-twitter\n          </v-icon>\n        </v-btn>\n        <v-btn\n          class=\"mx-2\"\n          fab\n          dark\n          small\n          color=\"error\"\n        >\n          <v-icon dark>\n          fas fa-globe-asia\n          </v-icon>\n        </v-btn>\n          </v-row>\n    \n        </v-card-text>  \n     \n      </v-card>\n           \n    </v-hover>\n                </v-col>\n                <v-col cols=\"12\" sm=\"8\">\n                    <h1 class=\"  grey--text text--darken-3 mt-5\">{{ this.actor.name }}</h1>\n                    <v-row>\n                        <v-col cols=\"12\">\n                            <v-btn text >\n                                <v-icon color=\"error\">fas fa-birthday-cake</v-icon>\n                            </v-btn>\n                             <span class=\"grey--text\">\n                                   1988-12-16 (31)\n            </span> \n                             \n                        </v-col>\n    \n                    </v-row>\n                  \n          <p class=\"mt-5 grey--text text--darken-3 subheader\">{{ this.actor.biography }}</p>\n          <h4 class=\"mt-1 grey--text\">Known For</h4>\n          <v-row>\n               <v-col cols=\"12\" sm=\"3\" :key=\"movie.id\" v-for=\"movie in this.knownFor\" class=\"mt-5\">\n                     <v-hover\n            v-slot=\"{ hover }\"\n            open-delay=\"200\"\n          >\n    <v-card :elevation=\"hover ? 16 : 2\"\n              :class=\"{ 'on-hover': hover }\">\n              <router-link\n                  :to=\"`/movie/${movie.id}`\"\n                >\n              <v-img :src=\"movieImage(movie)\"/>\n      </router-link>\n      </v-card>\n           \n    </v-hover>\n              </v-col>\n          </v-row>\n          \n        \n        \n      \n                </v-col>\n            </v-row>\n            <v-divider class=\"mt-2\"></v-divider>\n          \n            <h2 class=\"mt-2 grey--text \">Credits</h2>\n            <ul class=\" pl-5 mt-8\">\n              <li :key=\"cast.id\" v-for=\"cast in castMovies\">\n                <strong>{{ castDetails(cast) }} </strong>\n          \n                <v-btn text :to=\"`/movie/${cast.id}`\">\n                    {{ cast.title }}\n                </v-btn>\n    \n                as {{ cast.character }}\n              </li>\n            </ul>\n       \n        </v-container>\n     \n        \n      </div>\n      \n    \n    </template>\n    \n    <script>\n    export default {\n      data() {\n        return {\n          socialDetails: [],\n          actor: {},\n          knownFor: [],\n          castMovies: {},\n        };\n      },\n    \n      mounted() {\n        this.fetchActor(this.$route.params.id);\n        this.fetchCredits(this.$route.params.id);\n        this.fetchSocial(this.$route.params.id);\n      },\n      methods: {\n        async fetchActor(actorId) {\n          const response = await this.$http.get(\n            \"https://api.themoviedb.org/3/person/\" + actorId\n          );\n    \n          this.actor = response.data;\n        },\n        async fetchCredits(actorId) {\n          const response = await this.$http.get(\n            \"https://api.themoviedb.org/3/person/\" + actorId + \"/combined_credits\"\n          );\n          this.castMovies = response.data.cast;\n          this.knownFor = response.data.cast\n          .filter((x) => x.media_type == \"movie\")\n          .slice(1, 6);\n          /*this.knownFor = response.data.cast.slice(\n            Math.max(response.data.cast.length - 5, 1)\n          );*/\n        },\n    \n        movieImage(movie) {\n          const posterPath = movie.poster_path;\n          if (!posterPath) {\n            return \"https://via.placeholder.com/185x278\";\n          }\n          return \"https://image.tmdb.org/t/p/w185/\" + posterPath;\n        },\n    \n        async fetchSocial(actorId) {\n          const response = await this.$http.get(\n            \"https://api.themoviedb.org/3/person/\" + actorId + \"/external_ids\"\n          );\n    \n          this.socialDetails = response.data;\n        },\n    \n        castDetails(cast) {\n          return parseInt(cast.release_date) + \" .\";\n        },\n      },\n    };\n    </script>\n    \n    <style></style>"],"mappings":"AA2IA;EACAA,KAAA;IACA;MACAC,aAAA;MACAC,KAAA;MACAC,QAAA;MACAC,UAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,UAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,KAAAC,YAAA,MAAAH,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,KAAAE,WAAA,MAAAJ,MAAA,CAAAC,MAAA,CAAAC,EAAA;EACA;EACAG,OAAA;IACA,MAAAN,WAAAO,OAAA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACA,yCAAAH,OACA;MAEA,KAAAX,KAAA,GAAAY,QAAA,CAAAd,IAAA;IACA;IACA,MAAAU,aAAAG,OAAA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACA,yCAAAH,OAAA,sBACA;MACA,KAAAT,UAAA,GAAAU,QAAA,CAAAd,IAAA,CAAAiB,IAAA;MACA,KAAAd,QAAA,GAAAW,QAAA,CAAAd,IAAA,CAAAiB,IAAA,CACAC,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,UAAA,aACAC,KAAA;MACA;AACA;AACA;IACA;IAEAC,WAAAC,KAAA;MACA,MAAAC,UAAA,GAAAD,KAAA,CAAAE,WAAA;MACA,KAAAD,UAAA;QACA;MACA;MACA,4CAAAA,UAAA;IACA;IAEA,MAAAb,YAAAE,OAAA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACA,yCAAAH,OAAA,kBACA;MAEA,KAAAZ,aAAA,GAAAa,QAAA,CAAAd,IAAA;IACA;IAEA0B,YAAAT,IAAA;MACA,OAAAU,QAAA,CAAAV,IAAA,CAAAW,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}