{"ast":null,"code":"import Cast from '../components/Cast.vue';\nimport Images from './Images.vue';\nexport default {\n  components: {\n    Cast,\n    Images\n  },\n  props: {\n    show: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      movie: {\n        credits: {\n          crew: {}\n        },\n        images: {\n          backdrops: {}\n        }\n      },\n      isVideo: false,\n      mediaURL: \"\",\n      dialog: false\n    };\n  },\n  mounted() {\n    this.fetchShow(this.$route.params.id);\n  },\n  watch: {\n    \"$route.params.id\": {\n      handler() {\n        this.fetchShow(this.$route.params.id);\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    posterPath() {\n      return \"https://image.tmdb.org/t/p/w1280\" + this.show.poster_path;\n    }\n  },\n  methods: {\n    async fetchShow(showId) {\n      const response = await this.$http.get(\"/tv/\" + showId + \"&language=en-US&page=\");\n      this.movie = response.data;\n    }\n  }\n};","map":{"version":3,"names":["Cast","Images","components","props","show","required","data","movie","credits","crew","images","backdrops","isVideo","mediaURL","dialog","mounted","fetchShow","$route","params","id","watch","handler","immediate","computed","posterPath","poster_path","methods","showId","response","$http","get"],"sources":["src/components/TVDetail.vue"],"sourcesContent":["<template>\n    <div>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"4\">\n                    <v-hover v-slot=\"{ hover }\" open-delay=\"200\">\n                        <v-card :elevation=\"hover ? 16 : 2\" :class=\"{ 'on-hover': hover }\">\n                            <router-link :to=\"`/show/${show.id}`\">\n                            <v-img :src=\"posterPath\" alt=\"\" class=\"\" />\n                            </router-link>\n                        </v-card>\n                    </v-hover>\n                </v-col>\n                <v-col cols=\"12\" sm=\"8\">\n                    <h1 class=\"grey--text text-darken-3 mt-5\">detail</h1>\n                    <v-row>\n                        <v-col cols=\"12\" sm=\"2\">\n                            <v-rating color=\"amber\" dense half-increments readonly size=\"14\"></v-rating>\n                        </v-col>\n                        <v-col cols=\"12\" sm=\"3\">\n                            <span class=\"gray--text ml-n7\">\n                                |\n                            </span>\n                        </v-col>\n                        <v-col cols=\"12\" sm=\"7\">\n                            <div class=\"subtitle-2 grey--text ml-n16\">\n                                <span>\n                                    <span v-if=\"(movie.genres.length - 1 != index)\">,</span>\n                                </span>\n                            </div>\n                        </v-col>\n                    </v-row>\n                    \n                    <v-btn tile color=\"error\" class=\"ml-2\">\n                        <v-icon left>mdi-heart</v-icon>Favorite\n                    </v-btn>\n                </v-col>\n            </v-row>\n        </v-container>\n    </div>\n</template>\n\n<script>\nimport Cast from '../components/Cast.vue'\nimport Images from './Images.vue';\nexport default {\n    components: {\n        Cast,\n        Images,\n    },\n    props: {\n        show: {\n            required: true\n        }\n    },\n    data() {\n        return {\n            movie: {\n                credits: {\n                    crew: {},\n                },\n                images: {\n                    backdrops: {},\n                },\n            },\n            isVideo: false,\n            mediaURL: \"\",\n            dialog: false,\n        }\n    },\n    mounted() {\n        this.fetchShow(this.$route.params.id);\n    },\n    watch: {\n        \"$route.params.id\": {\n            handler() {\n                this.fetchShow(this.$route.params.id);\n            },\n            immediate: true,\n        }\n    },\n    computed: {\n        posterPath() {\n            return \"https://image.tmdb.org/t/p/w1280\" + this.show.poster_path\n        }\n    },\n    methods: {\n        async fetchShow(showId){\n            const response = await this.$http.get(\n                \"/tv/\" + showId + \"&language=en-US&page=\"\n            );\n            this.movie = response.data;\n        },\n    }\n}\n</script>\n\n<style></style>"],"mappings":"AA2CA,OAAAA,IAAA;AACA,OAAAC,MAAA;AACA;EACAC,UAAA;IACAF,IAAA;IACAC;EACA;EACAE,KAAA;IACAC,IAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,KAAA;QACAC,OAAA;UACAC,IAAA;QACA;QACAC,MAAA;UACAC,SAAA;QACA;MACA;MACAC,OAAA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;EACA;EACAC,KAAA;IACA;MACAC,QAAA;QACA,KAAAL,SAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA;MACAG,SAAA;IACA;EACA;EACAC,QAAA;IACAC,WAAA;MACA,iDAAApB,IAAA,CAAAqB,WAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAV,UAAAW,MAAA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACA,SAAAH,MAAA,0BACA;MACA,KAAApB,KAAA,GAAAqB,QAAA,CAAAtB,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}