{"ast":null,"code":"import Cast from '../components/Cast.vue';\nimport Images from './Images.vue';\nexport default {\n  components: {\n    Cast,\n    Images\n  },\n  data() {\n    return {\n      movie: {\n        credits: {\n          crew: {}\n        },\n        images: {\n          backdrops: {}\n        }\n      },\n      isVideo: false,\n      mediaURL: \"\",\n      dialog: false\n    };\n  },\n  mounted() {\n    this.fetchMovie(this.$route.params.id);\n  },\n  watch: {\n    \"$route.params.id\": {\n      handler() {\n        this.fetchMovie(this.$route.params.id);\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    posterPath() {\n      return \"https://image.tmdb.org/t/p/w500/\" + this.movie.poster_path;\n    }\n  },\n  methods: {\n    async fetchMovie(movieId) {\n      const response = await this.$http.get(\"/movie/\" + movieId + \"?append_to_response=credits,videos,images\");\n      this.movie = response.data;\n    },\n    openYoutubeModel() {\n      this.mediaURL = this.youtubeVideo();\n      this.isVideo = true;\n    },\n    youtubeVideo() {\n      if (!this.movie.videos) return;\n      return \"https://www.youtube.com/embed/\" + this.movie.videos.results[0].key;\n    }\n  }\n};","map":{"version":3,"names":["Cast","Images","components","data","movie","credits","crew","images","backdrops","isVideo","mediaURL","dialog","mounted","fetchMovie","$route","params","id","watch","handler","immediate","computed","posterPath","poster_path","methods","movieId","response","$http","get","openYoutubeModel","youtubeVideo","videos","results","key"],"sources":["src/components/MovieDetail.vue"],"sourcesContent":["<template>\n    <div>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"4\">\n                    <v-hover\n                    v-slot=\"{hover}\"\n                    open-delay=\"200\"\n                    >\n                    <v-card :elevation=\"hover ? 16 : 2\"\n                    :class=\"{'on-hover': hover}\">\n                <router-link :to=\"`/movie/${movie.id}`\">\n                    <v-img :src=\"posterPath\" alt=\"\" class=\"\" />\n                </router-link>\n            </v-card>\n                    </v-hover>\n                </v-col>\n                <v-col cols=\"12\" sm=\"8\">\n                    <h1 class=\"grey--text text-darken-3 mt-5\">{{ this.movie.title }}</h1>\n                    <v-row>\n                        <v-col cols=\"12\" sm=\"2\">\n                            <v-rating\n                            :value=\"movie.vote_average / 2\"\n                            color=\"amber\"\n                            dense\n                            half-increments\n                            readonly\n                            size=\"14\"\n                            ></v-rating>\n                        </v-col>\n                        <v-col cols=\"12\" sm=\"3\">\n                            <span class=\"gray--text ml-n7\">\n                                {{ movie.vote_average * 10 }}% | {{ movie.release_date }}\n                            </span>\n                        </v-col>\n                        <v-col cols=\"12\" sm=\"7\">\n                            <div class=\"subtitle-2 grey--text ml-n16\">\n                                <span v-for=\"(item, index) in movie.genres\" :key=\"index\" class=\"ml-1\">\n                                {{ item.name }}\n                                <span v-if=\"(movie.genres.length - 1 !=index)\">,</span>\n                            </span>\n                            </div>\n                        </v-col>\n                    </v-row>\n                    <p class=\"mt-5 grey--text text--darken-3 subheader\">{{ this.movie.overview }}</p>\n                    <div class=\"mt-5\">\n                        <h2 class=\"mt-5 grey--text text--darken-3\">Featured Cast</h2>\n                        <div :key=\"index\" v-for=\"(crew, index) in movie.credits.crew\" class=\"mt-5\">\n                            <div v-if=\"index < 2\" class=\"\">\n                            <h3>{{ crew.name }}</h3>\n                            <span class=\"grey--text\">{{ crew.job }}</span>\n                        </div>\n                        </div>\n                    </div>\n                    <v-dialog\n                    v-model=\"dialog\"\n                    persistent\n                    max-width=\"800px\"\n                    >\n                        <template v-slot:activator=\"{ on, attrs }\">\n                        <v-btn tile color=\"error\" v-bind=\"attrs\" v-on=\"on\" @click.prevent=\"openYoutubeModel\">\n                            <v-icon left>mdi-play</v-icon>Play\n                        </v-btn>\n                    </template>\n                    <v-card>\n                        <v-card-title>\n                            <span class=\"headline\">{{ this.movie.title }}</span>\n                        </v-card-title>\n                        <v-card-text>\n                            <v-row>\n                                <v-col cols=\"12\" sm=\"\">\n                                    <div class=\"iframe-container\">\n                                        <img :src=\"mediaURL\" v-if=\"!isVideo\" />\n                                        <iframe allowfullscreen v-if=\"isVideo\" :src=\"mediaURL\"></iframe>\n                                    </div>\n                                </v-col>\n                            </v-row>\n                        </v-card-text>\n                        <v-card-actions>\n                            <v-spacer></v-spacer>\n                            <v-btn color=\"error\" text @click=\"dialog = false\">Close</v-btn>\n                        </v-card-actions>\n                    </v-card>\n                    </v-dialog>\n                    <v-btn tile color=\"error\" class=\"ml-2\">\n                        <v-icon left>mdi-heart</v-icon>Favorite\n                    </v-btn>\n                </v-col>\n            </v-row>\n            <v-divider class=\"mt-2\"></v-divider>\n            <Cast :casts=\"movie.credits.cast\"/>\n         <v-divider class=\"mt-2\"></v-divider>\n         <!-- <Images :images=\"movie.images.backdrops\" /> -->\n        </v-container>\n    </div>\n</template>\n\n<script>\nimport Cast from '../components/Cast.vue'\nimport Images from './Images.vue';\nexport default {\ncomponents:{\n    Cast,\n    Images,\n},\n    data(){\n        return {\n            movie: {\n                credits:{\n                    crew: {},\n                },\n                images: {\n                    backdrops: {},\n                },\n            },\n            isVideo: false,\n            mediaURL: \"\",\n            dialog: false,\n        }\n    },\n    mounted(){\n        this.fetchMovie(this.$route.params.id);\n    },\n    watch: {\n        \"$route.params.id\":{\n            handler(){\n                this.fetchMovie(this.$route.params.id);\n            },\n            immediate: true,\n        }\n    },\n    computed: {\n        posterPath(){\n            return \"https://image.tmdb.org/t/p/w500/\" + this.movie.poster_path;\n        }\n    },\n    methods: {\n        async fetchMovie(movieId){\n            const response = await this.$http.get(\n                \"/movie/\" + movieId + \"?append_to_response=credits,videos,images\"\n            );\n            this.movie = response.data;\n        },\n        openYoutubeModel(){\n            this.mediaURL = this.youtubeVideo();\n            this.isVideo = true;\n        },\n        youtubeVideo(){\n            if(!this.movie.videos) return;\n            return (\n                \"https://www.youtube.com/embed/\" + this.movie.videos.results[0].key\n            )\n        }\n    }\n}\n</script>\n\n<style>\n.iframe-container {\n    overflow: hidden;\n    padding-top: 56.25%;\n    position: relative;\n}\n.iframe-container iframe {\n    border: 0;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n}\n</style>"],"mappings":"AAkGA,OAAAA,IAAA;AACA,OAAAC,MAAA;AACA;EACAC,UAAA;IACAF,IAAA;IACAC;EACA;EACAE,KAAA;IACA;MACAC,KAAA;QACAC,OAAA;UACAC,IAAA;QACA;QACAC,MAAA;UACAC,SAAA;QACA;MACA;MACAC,OAAA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;EACA;EACAC,KAAA;IACA;MACAC,QAAA;QACA,KAAAL,UAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA;MACAG,SAAA;IACA;EACA;EACAC,QAAA;IACAC,WAAA;MACA,iDAAAjB,KAAA,CAAAkB,WAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAV,WAAAW,OAAA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACA,YAAAH,OAAA,8CACA;MACA,KAAApB,KAAA,GAAAqB,QAAA,CAAAtB,IAAA;IACA;IACAyB,iBAAA;MACA,KAAAlB,QAAA,QAAAmB,YAAA;MACA,KAAApB,OAAA;IACA;IACAoB,aAAA;MACA,UAAAzB,KAAA,CAAA0B,MAAA;MACA,OACA,wCAAA1B,KAAA,CAAA0B,MAAA,CAAAC,OAAA,IAAAC,GAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}