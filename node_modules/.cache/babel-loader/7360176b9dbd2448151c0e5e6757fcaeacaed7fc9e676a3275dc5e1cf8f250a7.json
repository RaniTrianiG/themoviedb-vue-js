{"ast":null,"code":"export default {\n  data() {\n    return {\n      socialDetails: [],\n      actor: [],\n      knownFor: [],\n      castMovies: {}\n    };\n  },\n  mounted() {\n    // this.fetchActor(this.$route.params.id);\n    // this.fetchCredits(this.$route.params.id);\n    // this.fetchSocial(this.$route.params.id);\n  },\n  methods: {\n    async fetchActor(actorId) {\n      const response = await this.$http.get(\"https://api.themoviedb.org/3/person/\" + actorId);\n      this.actor = response.data;\n    },\n    async fetchCredits(actorId) {\n      const response = await this.$http.get(\"https://api.themoviedb.org/3/person/\" + actorId + \"/combined_credits\");\n      this.castMovies = response.data.cast;\n      this.knownFor = response.data.cast.filter(x => x.media_type == \"movie\").slice(1, 6);\n    },\n    movieImage(movie) {\n      const posterPath = movie.poster_path;\n      if (!posterPath) {\n        return \"https://via.placeholder.com/185x278\";\n      }\n      return \"https://image.tmdb.org/t/p/w185\" + posterPath;\n    },\n    async fetchSocial(actorId) {\n      const response = await this.$http.get(\"https://api.themoviedb.org/3/person/\" + actorId + \"/external_ids\");\n      this.socialDetails = response.data;\n    },\n    castDetails(cast) {\n      return parseInt(cast.release_date) + \" .\";\n    }\n  }\n};","map":{"version":3,"names":["data","socialDetails","actor","knownFor","castMovies","mounted","methods","fetchActor","actorId","response","$http","get","fetchCredits","cast","filter","x","media_type","slice","movieImage","movie","posterPath","poster_path","fetchSocial","castDetails","parseInt","release_date"],"sources":["src/components/ActorDetail.vue"],"sourcesContent":["<template>\n    <div>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"4\">\n                    <v-hover v-slot=\"{hover }\" open-delay=\"200\">\n                        <v-card :elevation=\"hover ? 16 : 2\" :class=\"{'on-hover' : hover}\">\n                            <v-img :src=\"'https://image.tmdb.org/t/p/w300' + actor.profile_path\" alt=\"\"></v-img> \n                            <v-card-text>\n                                <v-row>\n                                    <v-btn class=\"mx-2\" fab dark small color=\"error\" :href=\"'https://instagram.com/' + socialDetails.instagram_id\">\n                                        <v-icon dark>\n                                            fab fa-instagram\n                                        </v-icon>\n                                    </v-btn>\n                                    <v-btn class=\"mx-2\" fab dark small color=\"error\" :href=\"'https://twitter.com' + socialDetails.twitter_id\">\n                                        <v-icon dark>\n                                            fab fa-twitter\n                                        </v-icon>\n                                    </v-btn>\n                                    <v-btn clas=\"mx-2\" fab dark small color=\"error\">\n                                        <v-icon dark>\n                                            fas fa-globe-asia\n                                        </v-icon>\n                                    </v-btn>\n                                </v-row>\n                            </v-card-text>\n                        </v-card>\n                    </v-hover>\n                </v-col>\n            </v-row>\n        </v-container>\n    </div>\n</template>\n\n<script>\nexport default {\ndata(){\n    return {\n        socialDetails: [],\n        actor: [],\n        knownFor: [],\n        castMovies: {},\n    };\n},\nmounted(){\n    // this.fetchActor(this.$route.params.id);\n    // this.fetchCredits(this.$route.params.id);\n    // this.fetchSocial(this.$route.params.id);\n},\nmethods: {\n    async fetchActor(actorId){\n        const response = await this.$http.get(\n            \"https://api.themoviedb.org/3/person/\" + actorId\n        );\n        this.actor = response.data;\n    },\n    async fetchCredits(actorId){\n        const response = await this.$http.get(\n            \"https://api.themoviedb.org/3/person/\" + actorId + \"/combined_credits\"\n        );\n        this.castMovies = response.data.cast;\n        this.knownFor = response.data.cast.filter((x) => x.media_type == \"movie\").slice(1, 6);\n    },\n    movieImage(movie){\n        const posterPath = movie.poster_path;\n        if(!posterPath){\n            return \"https://via.placeholder.com/185x278\";\n        }\n        return \"https://image.tmdb.org/t/p/w185\" + posterPath;\n    },\n    async fetchSocial(actorId){\n        const response = await this.$http.get(\n            \"https://api.themoviedb.org/3/person/\" + actorId + \"/external_ids\"\n        );\n        this.socialDetails = response.data;\n    },\n    castDetails(cast){\n        return parseInt(cast.release_date) + \" .\";\n    }\n}\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"AAoCA;EACAA,KAAA;IACA;MACAC,aAAA;MACAC,KAAA;MACAC,QAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA;IACA;IACA;EAAA,CACA;EACAC,OAAA;IACA,MAAAC,WAAAC,OAAA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACA,yCAAAH,OACA;MACA,KAAAN,KAAA,GAAAO,QAAA,CAAAT,IAAA;IACA;IACA,MAAAY,aAAAJ,OAAA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACA,yCAAAH,OAAA,sBACA;MACA,KAAAJ,UAAA,GAAAK,QAAA,CAAAT,IAAA,CAAAa,IAAA;MACA,KAAAV,QAAA,GAAAM,QAAA,CAAAT,IAAA,CAAAa,IAAA,CAAAC,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,UAAA,aAAAC,KAAA;IACA;IACAC,WAAAC,KAAA;MACA,MAAAC,UAAA,GAAAD,KAAA,CAAAE,WAAA;MACA,KAAAD,UAAA;QACA;MACA;MACA,2CAAAA,UAAA;IACA;IACA,MAAAE,YAAAd,OAAA;MACA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACA,yCAAAH,OAAA,kBACA;MACA,KAAAP,aAAA,GAAAQ,QAAA,CAAAT,IAAA;IACA;IACAuB,YAAAV,IAAA;MACA,OAAAW,QAAA,CAAAX,IAAA,CAAAY,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}